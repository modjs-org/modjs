version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      #TODO: use npm ci instead for automated env in order to enable caching for faster build
      # Remove existing node_modules and lock files
      - rm -rf node_modules
      - rm -f yarn.lock
      - rm -f package-lock.json
      # Reinstall dependencies with npm
      - npm install react
      - npm install react-dom
      - npm install react-router-dom
      - npm install styled-components
      # Ensure no workspaces are used
      - echo '{"private":true,"workspaces":["packages/core","packages/helpers","packages/icons","packages/utils","docs/modjs-docs-site/v7"]}' > package.json
      - npm install
  build:
    commands:
      - npm run build:docs
  post_build:
    commands:
      - ls -la node_modules/@modjs
      - ls -la 
      #CAUTION: Ensure correct path to the out folder in the monorepo
      - ls -la docs/modjs-docs-site/v7/out/ || echo "OUT DIRECTORY DOES NOT EXIST"
      - |
        renamed_files=$(find docs/modjs-docs-site/v7/out -type f -name "*.html" -exec sh -c 'mv "$1" "${1%.html}" && echo "${1%.html}"' _ {} \;)
        for file in $renamed_files; do
          aws s3 cp "${file}" "s3://www.modjs.prashan.dev/$(basename $file)" --content-type "text/html" --metadata-directive="REPLACE"
        done
        aws s3 sync "docs/modjs-docs-site/v7/out/" "s3://www.modjs.prashan.dev/" --delete --include "*" --exclude "$(basename -a $renamed_files)"